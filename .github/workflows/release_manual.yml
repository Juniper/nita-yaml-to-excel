name: Create release manually
on: 
  workflow_dispatch:
    inputs:
      release_name:
        description: 'Release name and tag name'
        required: true
      confirm_release_name:
        description: 'Release name and tag name to confirm its value'
        required: true


permissions:
  contents: write

jobs:
  release:
    name: Release 
    runs-on: ubuntu-22.04
    steps:

      - name:  Verify release name
        shell: bash
        run: |
           if [ ${{ github.event.inputs.release_name }} != ${{ github.event.inputs.confirm_release_name }} ] ; then
              echo "Discrepancy between release_anme and confirmation releasename!"
              exit 1
           fi
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Switch to main branch
        run: |
          git switch main
      
      - name: Set VERSION.txt
        env:
          tag: ${{ github.event.inputs.release_name }}
        shell: bash
        run:  echo "${tag}" > VERSION.txt  
        

      - name: Generate SBOM
        env:
          CompanyName: "Juniper Networks"
          PackageName: "nita-yaml-to-excel"
          NSB: "https://juniper.net"
        run: |
          curl -Lo $RUNNER_TEMP/sbom-tool https://github.com/microsoft/sbom-tool/releases/latest/download/sbom-tool-linux-x64
          chmod +x $RUNNER_TEMP/sbom-tool
          export SBOM_OUTPUT="/var/tmp/sbom_output"
          rm -rf "${SBOM_OUTPUT}_python"
          mkdir "${SBOM_OUTPUT}_python"
          $RUNNER_TEMP/sbom-tool generate -m ${SBOM_OUTPUT}_python -li true -pm true -b . -bc . -pn "${PackageName}" -pv 1.0.0 -ps "${CompanyName}" -nsb "${NSB}" -V Verbose 
          cp ${SBOM_OUTPUT}_python/_manifest/spdx_2.2/manifest.spdx.json NOTICES.spdx.json

      - name: Generate License and README
        env:
          tag: ${{ github.event.inputs.release_name }}
        run: |
            export DDATE=`date "+%Y"`
            export VERSION=${tag}
            sed "s/Copyright \[yyyy\] \[name of copyright owner\]/Copyright $DDATE, Juniper Networks,Inc/"< build-templates/LICENSE.txt > LICENSE.txt
            sed "s/Copyright \[yyyy\], \[name of copyright owner\]/Copyright $DDATE, Juniper Networks,Inc/"< build-templates/README.md > /var/tmp/README.tmp
            sed "s/\[version_template\]/$VERSION/" < /var/tmp/README.tmp > README.md

      
      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "Release workflow"
          git push 
          export ver=`cat VERSION.txt` 
          echo "VER=$ver TAG=v$ver"
          git tag "v$ver"  
          git push origin "v$ver"

          
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.event.inputs.release_name }}
        run: |
          export tag2=`cat VERSION.txt`
          gh release create "v$tag2" \
              --repo="$GITHUB_REPOSITORY" \
              --title="${tag2}" \
              --generate-notes